# -*- coding: utf-8 -*-
import codecs
import os
import xlrd
import json
from pip._vendor.distlib.compat import raw_input
resultSet=[]
key=[]
regexSet=[]
def dealRiskLevel(riskLevel):
    if not riskLevel:
        return ""
    dic = {}
    # print(riskLevel.split("；"))
    region = riskLevel.split("；")
    if len(region)==0:
        region.append(riskLevel)
    for a in range(0,len(region)):
        if region[a]=="":
            continue
        regionsplit = region[a].split("：")
        if len(regionsplit)<=1:
            print("风险等级解析出错")
            continue
        dics = {str(regionsplit[0]).replace("\n",""):regionsplit[1]}
        dic.update(dics)
    return dic

def dealNameContent(s, type):
    # print(name)
    for a in range(len(resultSet)):
        if resultSet[a]["reason"] == s[1]:
            if type==0:
                illegalObj = {"name": s[3], "content": s[4]}
                resultSet[a]["illegal"].append(illegalObj.copy())
            if type==1:
                illegalObj = {"name": s[5], "content": s[6]}
                resultSet[a]["punish"].append(illegalObj.copy())
            return 1
    if type == 0:
        illegalObj = {"name": s[3], "content": s[4]}
        illegalArray = [illegalObj.copy()]
    if type == 1:
        illegalObj = {"name": s[5], "content": s[6]}
        illegalArray = [illegalObj.copy()]
    return illegalArray

def dealKeyword(data, s):
    keywords = s[7]
    keywordss= []
    try:
        if not keywords:
            print(s[1]+"------当前关键词未配置")
            return ""
        # 根据sheet名称找到索引
        index = data.sheet_names().index(keywords)
        # 通过索引找到该sheet
        table = data.sheets()[index]
    except Exception:
        print(keywords+"该关键词对应的sheet未找到")
        return ""
    nrows = table.nrows
    for i in range(nrows):
        s = table.row_values(i)
        for j in range(len(s)):
            # 过滤掉为空的单元格
            if s[j]!= "":
                keywordss.append(str(s[j]).strip("\n").strip("").strip(" "))
    return keywordss

def dealRegex(regex):
    regexs=[]
    if regex:
        lines = regex.split("\n")
        lines = list(filter(lambda x: x!="",lines))
        regexSet.extend(lines)
        regexs.extend(lines)
    return regexs


def saveFile(file_path, file_name, data):
    output = codecs.open(file_path + "/" + file_name + ".json", 'w', "utf-8")
    output.write(data)
    output.close()

def startProcess(path):
    jsonstr = {}
    data = xlrd.open_workbook(path)
    table=data.sheets()[0]
    nrows=table.nrows
    for i in range(1, nrows):
        s = table.row_values(i)
        adtype = s[0]
        # type为空时放弃
        if adtype == "":
            continue
        jsonstr["type"] = adtype
        jsonstr["illegal"] = dealNameContent(s,0)
        result = dealNameContent(s,1)
        jsonstr["punish"] = result
        if result == 1:
            # 清空当前
            jsonstr={}
            continue
        jsonstr["reason"] = s[1]
        jsonstr["riskLevel"] = dealRiskLevel(s[2])
        jsonstr["keywords"] = dealKeyword(data, s)
        # 提取所有keywords
        key.extend(dealKeyword(data,s))
        jsonstr["regex"] = dealRegex(s[8])  #预留正则
        resultSet.append(jsonstr.copy())
    print("类别--"+table.row_values(1)[0]+"--已处理完成")


if __name__ == '__main__':
    # try:
    while 1:
        inputOption = raw_input(u'生成文件请输入 "st" ---继续添加请输入excel文件路径：\n')
        if inputOption == "st":
            break
        startProcess(inputOption)
    returnJson = json.dumps(resultSet, indent=4, sort_keys=True, ensure_ascii=False)
    keys = json.dumps(key, indent=4, sort_keys=True, ensure_ascii=False)
    regexs = json.dumps(regexSet, indent=4, sort_keys=True, ensure_ascii=False)
    saveFile(os.getcwd(), "advertise", returnJson)
    saveFile(os.getcwd(), "keys", keys)
    saveFile(os.getcwd(), "regexs", regexs)
    print("文件已生成 advertise.json")
    print("文件已生成 key.json")
    print("文件已生成 regexs.json")
    # except Exception as e:
    #     print(e)